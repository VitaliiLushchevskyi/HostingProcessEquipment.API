// <auto-generated />
using System;
using HostingProcessEquipment.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HostingProcessEquipment.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204163152_InitialSeeds")]
    partial class InitialSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HostingProcessEquipment.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessEquipmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEquipmentTypeId");

                    b.HasIndex("ProductionFacilityId");

                    b.ToTable("EquipmentPlacementContracts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a941d10-8b69-4b07-b5f1-0b8fd7ea5883"),
                            EquipmentQuantity = 5,
                            ProcessEquipmentTypeId = new Guid("f3b5e6c4-2a19-4aa4-a0c4-d73f66a758a1"),
                            ProductionFacilityId = new Guid("d3a4bdae-5f7b-4f76-8f8d-99f97843d61a")
                        },
                        new
                        {
                            Id = new Guid("c5a0df62-9534-4df9-8499-912dcb555b9e"),
                            EquipmentQuantity = 3,
                            ProcessEquipmentTypeId = new Guid("bb2d4866-8516-4c15-8143-cd8a857dab43"),
                            ProductionFacilityId = new Guid("6bc2e8ab-9289-4cb2-b0ff-2e8b8c5d4976")
                        });
                });

            modelBuilder.Entity("HostingProcessEquipment.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3b5e6c4-2a19-4aa4-a0c4-d73f66a758a1"),
                            Area = 150.0,
                            Code = "EQP001",
                            Name = "Crusher"
                        },
                        new
                        {
                            Id = new Guid("bb2d4866-8516-4c15-8143-cd8a857dab43"),
                            Area = 100.0,
                            Code = "EQP002",
                            Name = "Conveyor Belt"
                        });
                });

            modelBuilder.Entity("HostingProcessEquipment.Domain.Entities.ProductionFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("StandardArea")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3a4bdae-5f7b-4f76-8f8d-99f97843d61a"),
                            Code = "FAC001",
                            Name = "Main Facility",
                            StandardArea = 1000.0
                        },
                        new
                        {
                            Id = new Guid("6bc2e8ab-9289-4cb2-b0ff-2e8b8c5d4976"),
                            Code = "FAC002",
                            Name = "Secondary Facility",
                            StandardArea = 750.0
                        });
                });

            modelBuilder.Entity("HostingProcessEquipment.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.HasOne("HostingProcessEquipment.Domain.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany()
                        .HasForeignKey("ProcessEquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostingProcessEquipment.Domain.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany("Contracts")
                        .HasForeignKey("ProductionFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("HostingProcessEquipment.Domain.Entities.ProductionFacility", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
